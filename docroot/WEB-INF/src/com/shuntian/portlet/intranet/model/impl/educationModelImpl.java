/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.shuntian.portlet.intranet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.ContainerModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import com.liferay.portlet.trash.model.TrashEntry;
import com.liferay.portlet.trash.service.TrashEntryLocalServiceUtil;

import com.shuntian.portlet.intranet.model.education;
import com.shuntian.portlet.intranet.model.educationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the education service. Represents a row in the &quot;Intranet_education&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.shuntian.portlet.intranet.model.educationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link educationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see educationImpl
 * @see com.shuntian.portlet.intranet.model.education
 * @see com.shuntian.portlet.intranet.model.educationModel
 * @generated
 */
public class educationModelImpl extends BaseModelImpl<education>
	implements educationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a education model instance should use the {@link com.shuntian.portlet.intranet.model.education} interface instead.
	 */
	public static final String TABLE_NAME = "Intranet_education";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "educationId", Types.BIGINT },
			{ "satffId", Types.BIGINT },
			{ "witness", Types.VARCHAR },
			{ "professional", Types.VARCHAR },
			{ "university", Types.VARCHAR },
			{ "contact_phone", Types.VARCHAR },
			{ "start_stop_time", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "createuser", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifieduser", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Intranet_education (uuid_ VARCHAR(75) null,educationId LONG not null primary key,satffId LONG,witness VARCHAR(75) null,professional VARCHAR(75) null,university VARCHAR(75) null,contact_phone VARCHAR(75) null,start_stop_time DATE null,companyId LONG,createuser LONG,createDate DATE null,modifieduser LONG,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Intranet_education";
	public static final String ORDER_BY_JPQL = " ORDER BY education.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Intranet_education.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.shuntian.portlet.intranet.model.education"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.shuntian.portlet.intranet.model.education"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.shuntian.portlet.intranet.model.education"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long UUID_COLUMN_BITMASK = 2L;
	public static long CREATEDATE_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.shuntian.portlet.intranet.model.education"));

	public educationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _educationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEducationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _educationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return education.class;
	}

	@Override
	public String getModelClassName() {
		return education.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("educationId", getEducationId());
		attributes.put("satffId", getSatffId());
		attributes.put("witness", getWitness());
		attributes.put("professional", getProfessional());
		attributes.put("university", getUniversity());
		attributes.put("contact_phone", getContact_phone());
		attributes.put("start_stop_time", getStart_stop_time());
		attributes.put("companyId", getCompanyId());
		attributes.put("createuser", getCreateuser());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifieduser", getModifieduser());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long educationId = (Long)attributes.get("educationId");

		if (educationId != null) {
			setEducationId(educationId);
		}

		Long satffId = (Long)attributes.get("satffId");

		if (satffId != null) {
			setSatffId(satffId);
		}

		String witness = (String)attributes.get("witness");

		if (witness != null) {
			setWitness(witness);
		}

		String professional = (String)attributes.get("professional");

		if (professional != null) {
			setProfessional(professional);
		}

		String university = (String)attributes.get("university");

		if (university != null) {
			setUniversity(university);
		}

		String contact_phone = (String)attributes.get("contact_phone");

		if (contact_phone != null) {
			setContact_phone(contact_phone);
		}

		Date start_stop_time = (Date)attributes.get("start_stop_time");

		if (start_stop_time != null) {
			setStart_stop_time(start_stop_time);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long createuser = (Long)attributes.get("createuser");

		if (createuser != null) {
			setCreateuser(createuser);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long modifieduser = (Long)attributes.get("modifieduser");

		if (modifieduser != null) {
			setModifieduser(modifieduser);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getEducationId() {
		return _educationId;
	}

	@Override
	public void setEducationId(long educationId) {
		_educationId = educationId;
	}

	@Override
	public long getSatffId() {
		return _satffId;
	}

	@Override
	public void setSatffId(long satffId) {
		_satffId = satffId;
	}

	@Override
	public String getWitness() {
		if (_witness == null) {
			return StringPool.BLANK;
		}
		else {
			return _witness;
		}
	}

	@Override
	public void setWitness(String witness) {
		_witness = witness;
	}

	@Override
	public String getProfessional() {
		if (_professional == null) {
			return StringPool.BLANK;
		}
		else {
			return _professional;
		}
	}

	@Override
	public void setProfessional(String professional) {
		_professional = professional;
	}

	@Override
	public String getUniversity() {
		if (_university == null) {
			return StringPool.BLANK;
		}
		else {
			return _university;
		}
	}

	@Override
	public void setUniversity(String university) {
		_university = university;
	}

	@Override
	public String getContact_phone() {
		if (_contact_phone == null) {
			return StringPool.BLANK;
		}
		else {
			return _contact_phone;
		}
	}

	@Override
	public void setContact_phone(String contact_phone) {
		_contact_phone = contact_phone;
	}

	@Override
	public Date getStart_stop_time() {
		return _start_stop_time;
	}

	@Override
	public void setStart_stop_time(Date start_stop_time) {
		_start_stop_time = start_stop_time;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getCreateuser() {
		return _createuser;
	}

	@Override
	public void setCreateuser(long createuser) {
		_createuser = createuser;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public long getModifieduser() {
		return _modifieduser;
	}

	@Override
	public void setModifieduser(long modifieduser) {
		_modifieduser = modifieduser;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				education.class.getName()));
	}

	@Override
	public int getStatus() {
		return 0;
	}

	@Override
	public TrashEntry getTrashEntry() throws PortalException, SystemException {
		if (!isInTrash()) {
			return null;
		}

		TrashEntry trashEntry = TrashEntryLocalServiceUtil.fetchEntry(getModelClassName(),
				getTrashEntryClassPK());

		if (trashEntry != null) {
			return trashEntry;
		}

		TrashHandler trashHandler = getTrashHandler();

		if (!Validator.isNull(trashHandler.getContainerModelClassName())) {
			ContainerModel containerModel = trashHandler.getParentContainerModel(this);

			while (containerModel != null) {
				if (containerModel instanceof TrashedModel) {
					TrashedModel trashedModel = (TrashedModel)containerModel;

					return trashedModel.getTrashEntry();
				}

				trashHandler = TrashHandlerRegistryUtil.getTrashHandler(trashHandler.getContainerModelClassName());

				if (trashHandler == null) {
					return null;
				}

				containerModel = trashHandler.getContainerModel(containerModel.getParentContainerModelId());
			}
		}

		return null;
	}

	@Override
	public long getTrashEntryClassPK() {
		return getPrimaryKey();
	}

	@Override
	public TrashHandler getTrashHandler() {
		return TrashHandlerRegistryUtil.getTrashHandler(getModelClassName());
	}

	@Override
	public boolean isInTrash() {
		if (getStatus() == WorkflowConstants.STATUS_IN_TRASH) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInTrashContainer() {
		TrashHandler trashHandler = getTrashHandler();

		if ((trashHandler == null) ||
				Validator.isNull(trashHandler.getContainerModelClassName())) {
			return false;
		}

		try {
			ContainerModel containerModel = trashHandler.getParentContainerModel(this);

			if (containerModel == null) {
				return false;
			}

			if (containerModel instanceof TrashedModel) {
				return ((TrashedModel)containerModel).isInTrash();
			}
		}
		catch (Exception e) {
		}

		return false;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			education.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public education toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (education)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		educationImpl educationImpl = new educationImpl();

		educationImpl.setUuid(getUuid());
		educationImpl.setEducationId(getEducationId());
		educationImpl.setSatffId(getSatffId());
		educationImpl.setWitness(getWitness());
		educationImpl.setProfessional(getProfessional());
		educationImpl.setUniversity(getUniversity());
		educationImpl.setContact_phone(getContact_phone());
		educationImpl.setStart_stop_time(getStart_stop_time());
		educationImpl.setCompanyId(getCompanyId());
		educationImpl.setCreateuser(getCreateuser());
		educationImpl.setCreateDate(getCreateDate());
		educationImpl.setModifieduser(getModifieduser());
		educationImpl.setModifiedDate(getModifiedDate());

		educationImpl.resetOriginalValues();

		return educationImpl;
	}

	@Override
	public int compareTo(education education) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), education.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof education)) {
			return false;
		}

		education education = (education)obj;

		long primaryKey = education.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		educationModelImpl educationModelImpl = this;

		educationModelImpl._originalUuid = educationModelImpl._uuid;

		educationModelImpl._originalCompanyId = educationModelImpl._companyId;

		educationModelImpl._setOriginalCompanyId = false;

		educationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<education> toCacheModel() {
		educationCacheModel educationCacheModel = new educationCacheModel();

		educationCacheModel.uuid = getUuid();

		String uuid = educationCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			educationCacheModel.uuid = null;
		}

		educationCacheModel.educationId = getEducationId();

		educationCacheModel.satffId = getSatffId();

		educationCacheModel.witness = getWitness();

		String witness = educationCacheModel.witness;

		if ((witness != null) && (witness.length() == 0)) {
			educationCacheModel.witness = null;
		}

		educationCacheModel.professional = getProfessional();

		String professional = educationCacheModel.professional;

		if ((professional != null) && (professional.length() == 0)) {
			educationCacheModel.professional = null;
		}

		educationCacheModel.university = getUniversity();

		String university = educationCacheModel.university;

		if ((university != null) && (university.length() == 0)) {
			educationCacheModel.university = null;
		}

		educationCacheModel.contact_phone = getContact_phone();

		String contact_phone = educationCacheModel.contact_phone;

		if ((contact_phone != null) && (contact_phone.length() == 0)) {
			educationCacheModel.contact_phone = null;
		}

		Date start_stop_time = getStart_stop_time();

		if (start_stop_time != null) {
			educationCacheModel.start_stop_time = start_stop_time.getTime();
		}
		else {
			educationCacheModel.start_stop_time = Long.MIN_VALUE;
		}

		educationCacheModel.companyId = getCompanyId();

		educationCacheModel.createuser = getCreateuser();

		Date createDate = getCreateDate();

		if (createDate != null) {
			educationCacheModel.createDate = createDate.getTime();
		}
		else {
			educationCacheModel.createDate = Long.MIN_VALUE;
		}

		educationCacheModel.modifieduser = getModifieduser();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			educationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			educationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return educationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", educationId=");
		sb.append(getEducationId());
		sb.append(", satffId=");
		sb.append(getSatffId());
		sb.append(", witness=");
		sb.append(getWitness());
		sb.append(", professional=");
		sb.append(getProfessional());
		sb.append(", university=");
		sb.append(getUniversity());
		sb.append(", contact_phone=");
		sb.append(getContact_phone());
		sb.append(", start_stop_time=");
		sb.append(getStart_stop_time());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createuser=");
		sb.append(getCreateuser());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifieduser=");
		sb.append(getModifieduser());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.shuntian.portlet.intranet.model.education");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>educationId</column-name><column-value><![CDATA[");
		sb.append(getEducationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>satffId</column-name><column-value><![CDATA[");
		sb.append(getSatffId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>witness</column-name><column-value><![CDATA[");
		sb.append(getWitness());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>professional</column-name><column-value><![CDATA[");
		sb.append(getProfessional());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>university</column-name><column-value><![CDATA[");
		sb.append(getUniversity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contact_phone</column-name><column-value><![CDATA[");
		sb.append(getContact_phone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>start_stop_time</column-name><column-value><![CDATA[");
		sb.append(getStart_stop_time());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createuser</column-name><column-value><![CDATA[");
		sb.append(getCreateuser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifieduser</column-name><column-value><![CDATA[");
		sb.append(getModifieduser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = education.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			education.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _educationId;
	private long _satffId;
	private String _witness;
	private String _professional;
	private String _university;
	private String _contact_phone;
	private Date _start_stop_time;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _createuser;
	private Date _createDate;
	private long _modifieduser;
	private Date _modifiedDate;
	private long _columnBitmask;
	private education _escapedModel;
}