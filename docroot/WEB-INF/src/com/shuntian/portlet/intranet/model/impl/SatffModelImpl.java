/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.shuntian.portlet.intranet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.ContainerModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import com.liferay.portlet.trash.model.TrashEntry;
import com.liferay.portlet.trash.service.TrashEntryLocalServiceUtil;

import com.shuntian.portlet.intranet.model.Satff;
import com.shuntian.portlet.intranet.model.SatffModel;
import com.shuntian.portlet.intranet.model.SatffSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Satff service. Represents a row in the &quot;Intranet_Satff&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.shuntian.portlet.intranet.model.SatffModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SatffImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SatffImpl
 * @see com.shuntian.portlet.intranet.model.Satff
 * @see com.shuntian.portlet.intranet.model.SatffModel
 * @generated
 */
@JSON(strict = true)
public class SatffModelImpl extends BaseModelImpl<Satff> implements SatffModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a satff model instance should use the {@link com.shuntian.portlet.intranet.model.Satff} interface instead.
	 */
	public static final String TABLE_NAME = "Intranet_Satff";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "id_", Types.BIGINT },
			{ "user_id", Types.BIGINT },
			{ "city", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "turnover_time", Types.TIMESTAMP },
			{ "entry_time", Types.TIMESTAMP },
			{ "base_pay", Types.DOUBLE },
			{ "performance_pay", Types.DOUBLE },
			{ "wage_subtotal", Types.DOUBLE },
			{ "insurance_base", Types.DOUBLE },
			{ "endowment_insurance", Types.DOUBLE },
			{ "unemployment_insurance", Types.DOUBLE },
			{ "work_injury_insurance", Types.DOUBLE },
			{ "birth_insurance", Types.DOUBLE },
			{ "medical_insurance", Types.DOUBLE },
			{ "individual_insurance", Types.DOUBLE },
			{ "housing_accumulation_fund_base", Types.DOUBLE },
			{ "individual_pay", Types.DOUBLE },
			{ "amount_payable", Types.DOUBLE },
			{ "people_together", Types.DOUBLE },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Intranet_Satff (uuid_ VARCHAR(75) null,id_ LONG not null primary key,user_id LONG,city VARCHAR(75) null,name VARCHAR(75) null,turnover_time DATE null,entry_time DATE null,base_pay DOUBLE,performance_pay DOUBLE,wage_subtotal DOUBLE,insurance_base DOUBLE,endowment_insurance DOUBLE,unemployment_insurance DOUBLE,work_injury_insurance DOUBLE,birth_insurance DOUBLE,medical_insurance DOUBLE,individual_insurance DOUBLE,housing_accumulation_fund_base DOUBLE,individual_pay DOUBLE,amount_payable DOUBLE,people_together DOUBLE,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Intranet_Satff";
	public static final String ORDER_BY_JPQL = " ORDER BY satff.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Intranet_Satff.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.shuntian.portlet.intranet.model.Satff"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.shuntian.portlet.intranet.model.Satff"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.shuntian.portlet.intranet.model.Satff"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long UUID_COLUMN_BITMASK = 2L;
	public static long CREATEDATE_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Satff toModel(SatffSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Satff model = new SatffImpl();

		model.setUuid(soapModel.getUuid());
		model.setId(soapModel.getId());
		model.setUser_id(soapModel.getUser_id());
		model.setCity(soapModel.getCity());
		model.setName(soapModel.getName());
		model.setTurnover_time(soapModel.getTurnover_time());
		model.setEntry_time(soapModel.getEntry_time());
		model.setBase_pay(soapModel.getBase_pay());
		model.setPerformance_pay(soapModel.getPerformance_pay());
		model.setWage_subtotal(soapModel.getWage_subtotal());
		model.setInsurance_base(soapModel.getInsurance_base());
		model.setEndowment_insurance(soapModel.getEndowment_insurance());
		model.setUnemployment_insurance(soapModel.getUnemployment_insurance());
		model.setWork_injury_insurance(soapModel.getWork_injury_insurance());
		model.setBirth_insurance(soapModel.getBirth_insurance());
		model.setMedical_insurance(soapModel.getMedical_insurance());
		model.setIndividual_insurance(soapModel.getIndividual_insurance());
		model.setHousing_accumulation_fund_base(soapModel.getHousing_accumulation_fund_base());
		model.setIndividual_pay(soapModel.getIndividual_pay());
		model.setAmount_payable(soapModel.getAmount_payable());
		model.setPeople_together(soapModel.getPeople_together());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Satff> toModels(SatffSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Satff> models = new ArrayList<Satff>(soapModels.length);

		for (SatffSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.shuntian.portlet.intranet.model.Satff"));

	public SatffModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Satff.class;
	}

	@Override
	public String getModelClassName() {
		return Satff.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("id", getId());
		attributes.put("user_id", getUser_id());
		attributes.put("city", getCity());
		attributes.put("name", getName());
		attributes.put("turnover_time", getTurnover_time());
		attributes.put("entry_time", getEntry_time());
		attributes.put("base_pay", getBase_pay());
		attributes.put("performance_pay", getPerformance_pay());
		attributes.put("wage_subtotal", getWage_subtotal());
		attributes.put("insurance_base", getInsurance_base());
		attributes.put("endowment_insurance", getEndowment_insurance());
		attributes.put("unemployment_insurance", getUnemployment_insurance());
		attributes.put("work_injury_insurance", getWork_injury_insurance());
		attributes.put("birth_insurance", getBirth_insurance());
		attributes.put("medical_insurance", getMedical_insurance());
		attributes.put("individual_insurance", getIndividual_insurance());
		attributes.put("housing_accumulation_fund_base",
			getHousing_accumulation_fund_base());
		attributes.put("individual_pay", getIndividual_pay());
		attributes.put("amount_payable", getAmount_payable());
		attributes.put("people_together", getPeople_together());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long user_id = (Long)attributes.get("user_id");

		if (user_id != null) {
			setUser_id(user_id);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Date turnover_time = (Date)attributes.get("turnover_time");

		if (turnover_time != null) {
			setTurnover_time(turnover_time);
		}

		Date entry_time = (Date)attributes.get("entry_time");

		if (entry_time != null) {
			setEntry_time(entry_time);
		}

		Double base_pay = (Double)attributes.get("base_pay");

		if (base_pay != null) {
			setBase_pay(base_pay);
		}

		Double performance_pay = (Double)attributes.get("performance_pay");

		if (performance_pay != null) {
			setPerformance_pay(performance_pay);
		}

		Double wage_subtotal = (Double)attributes.get("wage_subtotal");

		if (wage_subtotal != null) {
			setWage_subtotal(wage_subtotal);
		}

		Double insurance_base = (Double)attributes.get("insurance_base");

		if (insurance_base != null) {
			setInsurance_base(insurance_base);
		}

		Double endowment_insurance = (Double)attributes.get(
				"endowment_insurance");

		if (endowment_insurance != null) {
			setEndowment_insurance(endowment_insurance);
		}

		Double unemployment_insurance = (Double)attributes.get(
				"unemployment_insurance");

		if (unemployment_insurance != null) {
			setUnemployment_insurance(unemployment_insurance);
		}

		Double work_injury_insurance = (Double)attributes.get(
				"work_injury_insurance");

		if (work_injury_insurance != null) {
			setWork_injury_insurance(work_injury_insurance);
		}

		Double birth_insurance = (Double)attributes.get("birth_insurance");

		if (birth_insurance != null) {
			setBirth_insurance(birth_insurance);
		}

		Double medical_insurance = (Double)attributes.get("medical_insurance");

		if (medical_insurance != null) {
			setMedical_insurance(medical_insurance);
		}

		Double individual_insurance = (Double)attributes.get(
				"individual_insurance");

		if (individual_insurance != null) {
			setIndividual_insurance(individual_insurance);
		}

		Double housing_accumulation_fund_base = (Double)attributes.get(
				"housing_accumulation_fund_base");

		if (housing_accumulation_fund_base != null) {
			setHousing_accumulation_fund_base(housing_accumulation_fund_base);
		}

		Double individual_pay = (Double)attributes.get("individual_pay");

		if (individual_pay != null) {
			setIndividual_pay(individual_pay);
		}

		Double amount_payable = (Double)attributes.get("amount_payable");

		if (amount_payable != null) {
			setAmount_payable(amount_payable);
		}

		Double people_together = (Double)attributes.get("people_together");

		if (people_together != null) {
			setPeople_together(people_together);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getUser_id() {
		return _user_id;
	}

	@Override
	public void setUser_id(long user_id) {
		_user_id = user_id;
	}

	@JSON
	@Override
	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		_city = city;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public Date getTurnover_time() {
		return _turnover_time;
	}

	@Override
	public void setTurnover_time(Date turnover_time) {
		_turnover_time = turnover_time;
	}

	@JSON
	@Override
	public Date getEntry_time() {
		return _entry_time;
	}

	@Override
	public void setEntry_time(Date entry_time) {
		_entry_time = entry_time;
	}

	@JSON
	@Override
	public double getBase_pay() {
		return _base_pay;
	}

	@Override
	public void setBase_pay(double base_pay) {
		_base_pay = base_pay;
	}

	@JSON
	@Override
	public double getPerformance_pay() {
		return _performance_pay;
	}

	@Override
	public void setPerformance_pay(double performance_pay) {
		_performance_pay = performance_pay;
	}

	@JSON
	@Override
	public double getWage_subtotal() {
		return _wage_subtotal;
	}

	@Override
	public void setWage_subtotal(double wage_subtotal) {
		_wage_subtotal = wage_subtotal;
	}

	@JSON
	@Override
	public double getInsurance_base() {
		return _insurance_base;
	}

	@Override
	public void setInsurance_base(double insurance_base) {
		_insurance_base = insurance_base;
	}

	@JSON
	@Override
	public double getEndowment_insurance() {
		return _endowment_insurance;
	}

	@Override
	public void setEndowment_insurance(double endowment_insurance) {
		_endowment_insurance = endowment_insurance;
	}

	@JSON
	@Override
	public double getUnemployment_insurance() {
		return _unemployment_insurance;
	}

	@Override
	public void setUnemployment_insurance(double unemployment_insurance) {
		_unemployment_insurance = unemployment_insurance;
	}

	@JSON
	@Override
	public double getWork_injury_insurance() {
		return _work_injury_insurance;
	}

	@Override
	public void setWork_injury_insurance(double work_injury_insurance) {
		_work_injury_insurance = work_injury_insurance;
	}

	@JSON
	@Override
	public double getBirth_insurance() {
		return _birth_insurance;
	}

	@Override
	public void setBirth_insurance(double birth_insurance) {
		_birth_insurance = birth_insurance;
	}

	@JSON
	@Override
	public double getMedical_insurance() {
		return _medical_insurance;
	}

	@Override
	public void setMedical_insurance(double medical_insurance) {
		_medical_insurance = medical_insurance;
	}

	@JSON
	@Override
	public double getIndividual_insurance() {
		return _individual_insurance;
	}

	@Override
	public void setIndividual_insurance(double individual_insurance) {
		_individual_insurance = individual_insurance;
	}

	@JSON
	@Override
	public double getHousing_accumulation_fund_base() {
		return _housing_accumulation_fund_base;
	}

	@Override
	public void setHousing_accumulation_fund_base(
		double housing_accumulation_fund_base) {
		_housing_accumulation_fund_base = housing_accumulation_fund_base;
	}

	@JSON
	@Override
	public double getIndividual_pay() {
		return _individual_pay;
	}

	@Override
	public void setIndividual_pay(double individual_pay) {
		_individual_pay = individual_pay;
	}

	@JSON
	@Override
	public double getAmount_payable() {
		return _amount_payable;
	}

	@Override
	public void setAmount_payable(double amount_payable) {
		_amount_payable = amount_payable;
	}

	@JSON
	@Override
	public double getPeople_together() {
		return _people_together;
	}

	@Override
	public void setPeople_together(double people_together) {
		_people_together = people_together;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Satff.class.getName()));
	}

	@Override
	public int getStatus() {
		return 0;
	}

	@Override
	public TrashEntry getTrashEntry() throws PortalException, SystemException {
		if (!isInTrash()) {
			return null;
		}

		TrashEntry trashEntry = TrashEntryLocalServiceUtil.fetchEntry(getModelClassName(),
				getTrashEntryClassPK());

		if (trashEntry != null) {
			return trashEntry;
		}

		TrashHandler trashHandler = getTrashHandler();

		if (!Validator.isNull(trashHandler.getContainerModelClassName())) {
			ContainerModel containerModel = trashHandler.getParentContainerModel(this);

			while (containerModel != null) {
				if (containerModel instanceof TrashedModel) {
					TrashedModel trashedModel = (TrashedModel)containerModel;

					return trashedModel.getTrashEntry();
				}

				trashHandler = TrashHandlerRegistryUtil.getTrashHandler(trashHandler.getContainerModelClassName());

				if (trashHandler == null) {
					return null;
				}

				containerModel = trashHandler.getContainerModel(containerModel.getParentContainerModelId());
			}
		}

		return null;
	}

	@Override
	public long getTrashEntryClassPK() {
		return getPrimaryKey();
	}

	@Override
	public TrashHandler getTrashHandler() {
		return TrashHandlerRegistryUtil.getTrashHandler(getModelClassName());
	}

	@Override
	public boolean isInTrash() {
		if (getStatus() == WorkflowConstants.STATUS_IN_TRASH) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInTrashContainer() {
		TrashHandler trashHandler = getTrashHandler();

		if ((trashHandler == null) ||
				Validator.isNull(trashHandler.getContainerModelClassName())) {
			return false;
		}

		try {
			ContainerModel containerModel = trashHandler.getParentContainerModel(this);

			if (containerModel == null) {
				return false;
			}

			if (containerModel instanceof TrashedModel) {
				return ((TrashedModel)containerModel).isInTrash();
			}
		}
		catch (Exception e) {
		}

		return false;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Satff.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Satff toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Satff)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SatffImpl satffImpl = new SatffImpl();

		satffImpl.setUuid(getUuid());
		satffImpl.setId(getId());
		satffImpl.setUser_id(getUser_id());
		satffImpl.setCity(getCity());
		satffImpl.setName(getName());
		satffImpl.setTurnover_time(getTurnover_time());
		satffImpl.setEntry_time(getEntry_time());
		satffImpl.setBase_pay(getBase_pay());
		satffImpl.setPerformance_pay(getPerformance_pay());
		satffImpl.setWage_subtotal(getWage_subtotal());
		satffImpl.setInsurance_base(getInsurance_base());
		satffImpl.setEndowment_insurance(getEndowment_insurance());
		satffImpl.setUnemployment_insurance(getUnemployment_insurance());
		satffImpl.setWork_injury_insurance(getWork_injury_insurance());
		satffImpl.setBirth_insurance(getBirth_insurance());
		satffImpl.setMedical_insurance(getMedical_insurance());
		satffImpl.setIndividual_insurance(getIndividual_insurance());
		satffImpl.setHousing_accumulation_fund_base(getHousing_accumulation_fund_base());
		satffImpl.setIndividual_pay(getIndividual_pay());
		satffImpl.setAmount_payable(getAmount_payable());
		satffImpl.setPeople_together(getPeople_together());
		satffImpl.setCompanyId(getCompanyId());
		satffImpl.setUserId(getUserId());
		satffImpl.setUserName(getUserName());
		satffImpl.setCreateDate(getCreateDate());
		satffImpl.setModifiedDate(getModifiedDate());

		satffImpl.resetOriginalValues();

		return satffImpl;
	}

	@Override
	public int compareTo(Satff satff) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), satff.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Satff)) {
			return false;
		}

		Satff satff = (Satff)obj;

		long primaryKey = satff.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SatffModelImpl satffModelImpl = this;

		satffModelImpl._originalUuid = satffModelImpl._uuid;

		satffModelImpl._originalCompanyId = satffModelImpl._companyId;

		satffModelImpl._setOriginalCompanyId = false;

		satffModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Satff> toCacheModel() {
		SatffCacheModel satffCacheModel = new SatffCacheModel();

		satffCacheModel.uuid = getUuid();

		String uuid = satffCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			satffCacheModel.uuid = null;
		}

		satffCacheModel.id = getId();

		satffCacheModel.user_id = getUser_id();

		satffCacheModel.city = getCity();

		String city = satffCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			satffCacheModel.city = null;
		}

		satffCacheModel.name = getName();

		String name = satffCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			satffCacheModel.name = null;
		}

		Date turnover_time = getTurnover_time();

		if (turnover_time != null) {
			satffCacheModel.turnover_time = turnover_time.getTime();
		}
		else {
			satffCacheModel.turnover_time = Long.MIN_VALUE;
		}

		Date entry_time = getEntry_time();

		if (entry_time != null) {
			satffCacheModel.entry_time = entry_time.getTime();
		}
		else {
			satffCacheModel.entry_time = Long.MIN_VALUE;
		}

		satffCacheModel.base_pay = getBase_pay();

		satffCacheModel.performance_pay = getPerformance_pay();

		satffCacheModel.wage_subtotal = getWage_subtotal();

		satffCacheModel.insurance_base = getInsurance_base();

		satffCacheModel.endowment_insurance = getEndowment_insurance();

		satffCacheModel.unemployment_insurance = getUnemployment_insurance();

		satffCacheModel.work_injury_insurance = getWork_injury_insurance();

		satffCacheModel.birth_insurance = getBirth_insurance();

		satffCacheModel.medical_insurance = getMedical_insurance();

		satffCacheModel.individual_insurance = getIndividual_insurance();

		satffCacheModel.housing_accumulation_fund_base = getHousing_accumulation_fund_base();

		satffCacheModel.individual_pay = getIndividual_pay();

		satffCacheModel.amount_payable = getAmount_payable();

		satffCacheModel.people_together = getPeople_together();

		satffCacheModel.companyId = getCompanyId();

		satffCacheModel.userId = getUserId();

		satffCacheModel.userName = getUserName();

		String userName = satffCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			satffCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			satffCacheModel.createDate = createDate.getTime();
		}
		else {
			satffCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			satffCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			satffCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return satffCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(53);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", id=");
		sb.append(getId());
		sb.append(", user_id=");
		sb.append(getUser_id());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", turnover_time=");
		sb.append(getTurnover_time());
		sb.append(", entry_time=");
		sb.append(getEntry_time());
		sb.append(", base_pay=");
		sb.append(getBase_pay());
		sb.append(", performance_pay=");
		sb.append(getPerformance_pay());
		sb.append(", wage_subtotal=");
		sb.append(getWage_subtotal());
		sb.append(", insurance_base=");
		sb.append(getInsurance_base());
		sb.append(", endowment_insurance=");
		sb.append(getEndowment_insurance());
		sb.append(", unemployment_insurance=");
		sb.append(getUnemployment_insurance());
		sb.append(", work_injury_insurance=");
		sb.append(getWork_injury_insurance());
		sb.append(", birth_insurance=");
		sb.append(getBirth_insurance());
		sb.append(", medical_insurance=");
		sb.append(getMedical_insurance());
		sb.append(", individual_insurance=");
		sb.append(getIndividual_insurance());
		sb.append(", housing_accumulation_fund_base=");
		sb.append(getHousing_accumulation_fund_base());
		sb.append(", individual_pay=");
		sb.append(getIndividual_pay());
		sb.append(", amount_payable=");
		sb.append(getAmount_payable());
		sb.append(", people_together=");
		sb.append(getPeople_together());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(82);

		sb.append("<model><model-name>");
		sb.append("com.shuntian.portlet.intranet.model.Satff");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>user_id</column-name><column-value><![CDATA[");
		sb.append(getUser_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>turnover_time</column-name><column-value><![CDATA[");
		sb.append(getTurnover_time());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entry_time</column-name><column-value><![CDATA[");
		sb.append(getEntry_time());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>base_pay</column-name><column-value><![CDATA[");
		sb.append(getBase_pay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>performance_pay</column-name><column-value><![CDATA[");
		sb.append(getPerformance_pay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wage_subtotal</column-name><column-value><![CDATA[");
		sb.append(getWage_subtotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>insurance_base</column-name><column-value><![CDATA[");
		sb.append(getInsurance_base());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endowment_insurance</column-name><column-value><![CDATA[");
		sb.append(getEndowment_insurance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>unemployment_insurance</column-name><column-value><![CDATA[");
		sb.append(getUnemployment_insurance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>work_injury_insurance</column-name><column-value><![CDATA[");
		sb.append(getWork_injury_insurance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birth_insurance</column-name><column-value><![CDATA[");
		sb.append(getBirth_insurance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>medical_insurance</column-name><column-value><![CDATA[");
		sb.append(getMedical_insurance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>individual_insurance</column-name><column-value><![CDATA[");
		sb.append(getIndividual_insurance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>housing_accumulation_fund_base</column-name><column-value><![CDATA[");
		sb.append(getHousing_accumulation_fund_base());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>individual_pay</column-name><column-value><![CDATA[");
		sb.append(getIndividual_pay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount_payable</column-name><column-value><![CDATA[");
		sb.append(getAmount_payable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>people_together</column-name><column-value><![CDATA[");
		sb.append(getPeople_together());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Satff.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Satff.class };
	private String _uuid;
	private String _originalUuid;
	private long _id;
	private long _user_id;
	private String _city;
	private String _name;
	private Date _turnover_time;
	private Date _entry_time;
	private double _base_pay;
	private double _performance_pay;
	private double _wage_subtotal;
	private double _insurance_base;
	private double _endowment_insurance;
	private double _unemployment_insurance;
	private double _work_injury_insurance;
	private double _birth_insurance;
	private double _medical_insurance;
	private double _individual_insurance;
	private double _housing_accumulation_fund_base;
	private double _individual_pay;
	private double _amount_payable;
	private double _people_together;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private Satff _escapedModel;
}