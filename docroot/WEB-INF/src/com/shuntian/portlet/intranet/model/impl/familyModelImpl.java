/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.shuntian.portlet.intranet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.ContainerModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import com.liferay.portlet.trash.model.TrashEntry;
import com.liferay.portlet.trash.service.TrashEntryLocalServiceUtil;

import com.shuntian.portlet.intranet.model.family;
import com.shuntian.portlet.intranet.model.familyModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the family service. Represents a row in the &quot;Intranet_family&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.shuntian.portlet.intranet.model.familyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link familyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see familyImpl
 * @see com.shuntian.portlet.intranet.model.family
 * @see com.shuntian.portlet.intranet.model.familyModel
 * @generated
 */
public class familyModelImpl extends BaseModelImpl<family>
	implements familyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a family model instance should use the {@link com.shuntian.portlet.intranet.model.family} interface instead.
	 */
	public static final String TABLE_NAME = "Intranet_family";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "familyId", Types.BIGINT },
			{ "satffId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "relationship", Types.VARCHAR },
			{ "work_unit", Types.VARCHAR },
			{ "contact_phone", Types.VARCHAR },
			{ "once_job", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "createuser", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifieduser", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Intranet_family (uuid_ VARCHAR(75) null,familyId LONG not null primary key,satffId LONG,name VARCHAR(75) null,relationship VARCHAR(75) null,work_unit VARCHAR(75) null,contact_phone VARCHAR(75) null,once_job VARCHAR(75) null,companyId LONG,createuser LONG,createDate DATE null,modifieduser LONG,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Intranet_family";
	public static final String ORDER_BY_JPQL = " ORDER BY family.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Intranet_family.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.shuntian.portlet.intranet.model.family"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.shuntian.portlet.intranet.model.family"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.shuntian.portlet.intranet.model.family"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long UUID_COLUMN_BITMASK = 2L;
	public static long CREATEDATE_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.shuntian.portlet.intranet.model.family"));

	public familyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _familyId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFamilyId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _familyId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return family.class;
	}

	@Override
	public String getModelClassName() {
		return family.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("familyId", getFamilyId());
		attributes.put("satffId", getSatffId());
		attributes.put("name", getName());
		attributes.put("relationship", getRelationship());
		attributes.put("work_unit", getWork_unit());
		attributes.put("contact_phone", getContact_phone());
		attributes.put("once_job", getOnce_job());
		attributes.put("companyId", getCompanyId());
		attributes.put("createuser", getCreateuser());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifieduser", getModifieduser());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long familyId = (Long)attributes.get("familyId");

		if (familyId != null) {
			setFamilyId(familyId);
		}

		Long satffId = (Long)attributes.get("satffId");

		if (satffId != null) {
			setSatffId(satffId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String relationship = (String)attributes.get("relationship");

		if (relationship != null) {
			setRelationship(relationship);
		}

		String work_unit = (String)attributes.get("work_unit");

		if (work_unit != null) {
			setWork_unit(work_unit);
		}

		String contact_phone = (String)attributes.get("contact_phone");

		if (contact_phone != null) {
			setContact_phone(contact_phone);
		}

		String once_job = (String)attributes.get("once_job");

		if (once_job != null) {
			setOnce_job(once_job);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long createuser = (Long)attributes.get("createuser");

		if (createuser != null) {
			setCreateuser(createuser);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long modifieduser = (Long)attributes.get("modifieduser");

		if (modifieduser != null) {
			setModifieduser(modifieduser);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getFamilyId() {
		return _familyId;
	}

	@Override
	public void setFamilyId(long familyId) {
		_familyId = familyId;
	}

	@Override
	public long getSatffId() {
		return _satffId;
	}

	@Override
	public void setSatffId(long satffId) {
		_satffId = satffId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getRelationship() {
		if (_relationship == null) {
			return StringPool.BLANK;
		}
		else {
			return _relationship;
		}
	}

	@Override
	public void setRelationship(String relationship) {
		_relationship = relationship;
	}

	@Override
	public String getWork_unit() {
		if (_work_unit == null) {
			return StringPool.BLANK;
		}
		else {
			return _work_unit;
		}
	}

	@Override
	public void setWork_unit(String work_unit) {
		_work_unit = work_unit;
	}

	@Override
	public String getContact_phone() {
		if (_contact_phone == null) {
			return StringPool.BLANK;
		}
		else {
			return _contact_phone;
		}
	}

	@Override
	public void setContact_phone(String contact_phone) {
		_contact_phone = contact_phone;
	}

	@Override
	public String getOnce_job() {
		if (_once_job == null) {
			return StringPool.BLANK;
		}
		else {
			return _once_job;
		}
	}

	@Override
	public void setOnce_job(String once_job) {
		_once_job = once_job;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getCreateuser() {
		return _createuser;
	}

	@Override
	public void setCreateuser(long createuser) {
		_createuser = createuser;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public long getModifieduser() {
		return _modifieduser;
	}

	@Override
	public void setModifieduser(long modifieduser) {
		_modifieduser = modifieduser;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				family.class.getName()));
	}

	@Override
	public int getStatus() {
		return 0;
	}

	@Override
	public TrashEntry getTrashEntry() throws PortalException, SystemException {
		if (!isInTrash()) {
			return null;
		}

		TrashEntry trashEntry = TrashEntryLocalServiceUtil.fetchEntry(getModelClassName(),
				getTrashEntryClassPK());

		if (trashEntry != null) {
			return trashEntry;
		}

		TrashHandler trashHandler = getTrashHandler();

		if (!Validator.isNull(trashHandler.getContainerModelClassName())) {
			ContainerModel containerModel = trashHandler.getParentContainerModel(this);

			while (containerModel != null) {
				if (containerModel instanceof TrashedModel) {
					TrashedModel trashedModel = (TrashedModel)containerModel;

					return trashedModel.getTrashEntry();
				}

				trashHandler = TrashHandlerRegistryUtil.getTrashHandler(trashHandler.getContainerModelClassName());

				if (trashHandler == null) {
					return null;
				}

				containerModel = trashHandler.getContainerModel(containerModel.getParentContainerModelId());
			}
		}

		return null;
	}

	@Override
	public long getTrashEntryClassPK() {
		return getPrimaryKey();
	}

	@Override
	public TrashHandler getTrashHandler() {
		return TrashHandlerRegistryUtil.getTrashHandler(getModelClassName());
	}

	@Override
	public boolean isInTrash() {
		if (getStatus() == WorkflowConstants.STATUS_IN_TRASH) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInTrashContainer() {
		TrashHandler trashHandler = getTrashHandler();

		if ((trashHandler == null) ||
				Validator.isNull(trashHandler.getContainerModelClassName())) {
			return false;
		}

		try {
			ContainerModel containerModel = trashHandler.getParentContainerModel(this);

			if (containerModel == null) {
				return false;
			}

			if (containerModel instanceof TrashedModel) {
				return ((TrashedModel)containerModel).isInTrash();
			}
		}
		catch (Exception e) {
		}

		return false;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			family.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public family toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (family)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		familyImpl familyImpl = new familyImpl();

		familyImpl.setUuid(getUuid());
		familyImpl.setFamilyId(getFamilyId());
		familyImpl.setSatffId(getSatffId());
		familyImpl.setName(getName());
		familyImpl.setRelationship(getRelationship());
		familyImpl.setWork_unit(getWork_unit());
		familyImpl.setContact_phone(getContact_phone());
		familyImpl.setOnce_job(getOnce_job());
		familyImpl.setCompanyId(getCompanyId());
		familyImpl.setCreateuser(getCreateuser());
		familyImpl.setCreateDate(getCreateDate());
		familyImpl.setModifieduser(getModifieduser());
		familyImpl.setModifiedDate(getModifiedDate());

		familyImpl.resetOriginalValues();

		return familyImpl;
	}

	@Override
	public int compareTo(family family) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), family.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof family)) {
			return false;
		}

		family family = (family)obj;

		long primaryKey = family.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		familyModelImpl familyModelImpl = this;

		familyModelImpl._originalUuid = familyModelImpl._uuid;

		familyModelImpl._originalCompanyId = familyModelImpl._companyId;

		familyModelImpl._setOriginalCompanyId = false;

		familyModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<family> toCacheModel() {
		familyCacheModel familyCacheModel = new familyCacheModel();

		familyCacheModel.uuid = getUuid();

		String uuid = familyCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			familyCacheModel.uuid = null;
		}

		familyCacheModel.familyId = getFamilyId();

		familyCacheModel.satffId = getSatffId();

		familyCacheModel.name = getName();

		String name = familyCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			familyCacheModel.name = null;
		}

		familyCacheModel.relationship = getRelationship();

		String relationship = familyCacheModel.relationship;

		if ((relationship != null) && (relationship.length() == 0)) {
			familyCacheModel.relationship = null;
		}

		familyCacheModel.work_unit = getWork_unit();

		String work_unit = familyCacheModel.work_unit;

		if ((work_unit != null) && (work_unit.length() == 0)) {
			familyCacheModel.work_unit = null;
		}

		familyCacheModel.contact_phone = getContact_phone();

		String contact_phone = familyCacheModel.contact_phone;

		if ((contact_phone != null) && (contact_phone.length() == 0)) {
			familyCacheModel.contact_phone = null;
		}

		familyCacheModel.once_job = getOnce_job();

		String once_job = familyCacheModel.once_job;

		if ((once_job != null) && (once_job.length() == 0)) {
			familyCacheModel.once_job = null;
		}

		familyCacheModel.companyId = getCompanyId();

		familyCacheModel.createuser = getCreateuser();

		Date createDate = getCreateDate();

		if (createDate != null) {
			familyCacheModel.createDate = createDate.getTime();
		}
		else {
			familyCacheModel.createDate = Long.MIN_VALUE;
		}

		familyCacheModel.modifieduser = getModifieduser();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			familyCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			familyCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return familyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", familyId=");
		sb.append(getFamilyId());
		sb.append(", satffId=");
		sb.append(getSatffId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", relationship=");
		sb.append(getRelationship());
		sb.append(", work_unit=");
		sb.append(getWork_unit());
		sb.append(", contact_phone=");
		sb.append(getContact_phone());
		sb.append(", once_job=");
		sb.append(getOnce_job());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createuser=");
		sb.append(getCreateuser());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifieduser=");
		sb.append(getModifieduser());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.shuntian.portlet.intranet.model.family");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>familyId</column-name><column-value><![CDATA[");
		sb.append(getFamilyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>satffId</column-name><column-value><![CDATA[");
		sb.append(getSatffId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>relationship</column-name><column-value><![CDATA[");
		sb.append(getRelationship());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>work_unit</column-name><column-value><![CDATA[");
		sb.append(getWork_unit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contact_phone</column-name><column-value><![CDATA[");
		sb.append(getContact_phone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>once_job</column-name><column-value><![CDATA[");
		sb.append(getOnce_job());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createuser</column-name><column-value><![CDATA[");
		sb.append(getCreateuser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifieduser</column-name><column-value><![CDATA[");
		sb.append(getModifieduser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = family.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { family.class };
	private String _uuid;
	private String _originalUuid;
	private long _familyId;
	private long _satffId;
	private String _name;
	private String _relationship;
	private String _work_unit;
	private String _contact_phone;
	private String _once_job;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _createuser;
	private Date _createDate;
	private long _modifieduser;
	private Date _modifiedDate;
	private long _columnBitmask;
	private family _escapedModel;
}